import os
from datetime import datetime, timedelta

zz_index_list = ['000001.SH',
                 '000016.SH',
                 '000300.SH',
                 '000688.SH',
                 '000852.SH',
                 '000905.SH',
                 '000906.SH',
                 '000985.SH'
                 ]
gz_index_list = ['399001.SZ',
                 '399006.SZ',
                 '399106.SZ']

sw1_dict = {'801010': '农林牧渔',
            '801030': '基础化工',
            '801040': '钢铁',
            '801050': '有色金属',
            '801080': '电子',
            '801110': '家用电器',
            '801120': '食品饮料',
            '801130': '纺织服饰',
            '801140': '轻工制造',
            '801150': '医药生物',
            '801160': '公用事业',
            '801170': '交通运输',
            '801180': '房地产',
            '801200': '商贸零售',
            '801210': '社会服务',
            '801230': '综合',
            '801710': '建筑材料',
            '801720': '建筑装饰',
            '801730': '电力设备',
            '801740': '国防军工',
            '801750': '计算机',
            '801760': '传媒',
            '801770': '通信',
            '801780': '银行',
            '801790': '非银金融',
            '801880': '汽车',
            '801890': '机械设备',
            '801950': '煤炭',
            '801960': '石油石化',
            '801970': '环保',
            '801980': '美容护理'}
sw2_dict = {'801011': '林业Ⅱ',
            '801012': '农产品加工',
            '801014': '饲料',
            '801015': '渔业',
            '801016': '种植业',
            '801017': '养殖业',
            '801018': '动物保健Ⅱ',
            '801019': '农业综合Ⅱ',
            '801032': '化学纤维',
            '801033': '化学原料',
            '801034': '化学制品',
            '801036': '塑料',
            '801037': '橡胶',
            '801038': '农化制品',
            '801039': '非金属材料Ⅱ',
            '801043': '冶钢原料',
            '801044': '普钢',
            '801045': '特钢Ⅱ',
            '801051': '金属新材料',
            '801053': '贵金属',
            '801054': '小金属',
            '801055': '工业金属',
            '801056': '能源金属',
            '801072': '通用设备',
            '801074': '专用设备',
            '801076': '轨交设备Ⅱ',
            '801077': '工程机械',
            '801078': '自动化设备',
            '801081': '半导体',
            '801082': '其他电子Ⅱ',
            '801083': '元件',
            '801084': '光学光电子',
            '801085': '消费电子',
            '801086': '电子化学品Ⅱ',
            '801092': '汽车服务',
            '801093': '汽车零部件',
            '801095': '乘用车',
            '801096': '商用车',
            '801101': '计算机设备',
            '801102': '通信设备',
            '801103': 'IT服务Ⅱ',
            '801104': '软件开发',
            '801111': '白色家电',
            '801112': '黑色家电',
            '801113': '小家电',
            '801114': '厨卫电器',
            '801115': '照明设备Ⅱ',
            '801116': '家电零部件Ⅱ',
            '801117': '其他家电Ⅱ',
            '801124': '食品加工',
            '801125': '白酒Ⅱ',
            '801126': '非白酒',
            '801127': '饮料乳品',
            '801128': '休闲食品',
            '801129': '调味发酵品Ⅱ',
            '801131': '纺织制造',
            '801132': '服装家纺',
            '801133': '饰品',
            '801141': '包装印刷',
            '801142': '家居用品',
            '801143': '造纸',
            '801145': '文娱用品',
            '801151': '化学制药',
            '801152': '生物制品',
            '801153': '医疗器械',
            '801154': '医药商业',
            '801155': '中药Ⅱ',
            '801156': '医疗服务',
            '801161': '电力',
            '801163': '燃气Ⅱ',
            '801178': '物流',
            '801179': '铁路公路',
            '801181': '房地产开发',
            '801183': '房地产服务',
            '801191': '多元金融',
            '801193': '证券Ⅱ',
            '801194': '保险Ⅱ',
            '801202': '贸易Ⅱ',
            '801203': '一般零售',
            '801204': '专业连锁Ⅱ',
            '801206': '互联网电商',
            '801207': '旅游零售Ⅱ',
            '801216': '体育Ⅱ',
            '801218': '专业服务',
            '801219': '酒店餐饮',
            '801223': '通信服务',
            '801231': '综合Ⅱ',
            '801711': '水泥',
            '801712': '玻璃玻纤',
            '801713': '装修建材',
            '801721': '房屋建设Ⅱ',
            '801722': '装修装饰Ⅱ',
            '801723': '基础建设',
            '801724': '专业工程',
            '801726': '工程咨询服务Ⅱ',
            '801731': '电机Ⅱ',
            '801733': '其他电源设备Ⅱ',
            '801735': '光伏设备',
            '801736': '风电设备',
            '801737': '电池',
            '801738': '电网设备',
            '801741': '航天装备Ⅱ',
            '801742': '航空装备Ⅱ',
            '801743': '地面兵装Ⅱ',
            '801744': '航海装备Ⅱ',
            '801745': '军工电子Ⅱ',
            '801764': '游戏Ⅱ',
            '801765': '广告营销',
            '801766': '影视院线',
            '801767': '数字媒体',
            '801769': '出版',
            '801782': '国有大型银行Ⅱ',
            '801783': '股份制银行Ⅱ',
            '801784': '城商行Ⅱ',
            '801785': '农商行Ⅱ',
            '801881': '摩托车及其他',
            '801951': '煤炭开采',
            '801952': '焦炭Ⅱ',
            '801961': '油气开采Ⅱ',
            '801962': '油服工程',
            '801963': '炼化及贸易',
            '801971': '环境治理',
            '801972': '环保设备Ⅱ',
            '801981': '个护用品',
            '801982': '化妆品',
            '801983': '医疗美容',
            '801991': '航空机场',
            '801992': '航运港口',
            '801993': '旅游及景区',
            '801994': '教育',
            '801995': '电视广播Ⅱ'}
today = datetime.today()
today_str = today.strftime("%Y%m%d")
today_int = int(today.strftime('%Y%m%d'))
today_format = today.strftime('%Y-%m-%d')
yesterday = today - timedelta(days=1)
yesterday_str = yesterday.strftime("%Y%m%d")
yesterday_int = int(yesterday.strftime('%Y%m%d'))
yesterday_format = yesterday.strftime('%Y-%m-%d')

POSTGRES_CONFIG = {
    'host': '127.0.0.1',
    'port': 5432,
    'user': 'postgres',
    'password': 'lunyaqi',
    'database': 'postgres'
}
PARENT_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

BASE_LOG_PATH = os.path.join(PARENT_PATH, f'logs')

if not os.path.exists(BASE_LOG_PATH):
    os.makedirs(BASE_LOG_PATH)

# 定义文件路径
DATA_LOG_PATH = os.path.join(BASE_LOG_PATH, 'data.log')

# 如果文件不存在，创建文件并写入初始内容
if not os.path.exists(DATA_LOG_PATH):
    with open(DATA_LOG_PATH, 'w') as file:
        file.write('Initial content for data.log\n')

# 定义文件路径
FACTOR_LOG_PATH = os.path.join(BASE_LOG_PATH, 'factor.log')

# 如果文件不存在，创建文件并写入初始内容
if not os.path.exists(FACTOR_LOG_PATH):
    with open(FACTOR_LOG_PATH, 'w') as file:
        file.write('Initial content for factor.log\n')
